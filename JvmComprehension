public class JvmComprehension {
  // JVM загружает этот класс в область памяти Metaspace при помощи загрузчиков классов -> ClassLoader'ов
  public static void main(String[] args) {
    // В момент вызова метода main создается стэк-фрейм Main в области памяти Stack.
    int i = 1;                      // 1 сохраняется в стэк-фрейм метода main переменная i со значением 1.
    Object o = new Object();        // 2 Размещает в области памяти Heap экземпляр класса Оbject, 
    // создает в стек-фрейме метода main переменную-ссылку o на Оbject и сохраняет ссылку из памяти Heap
    Integer ii = 2;                 // 3 В Куче создается объект Integer со значением 2,
    // а в main появляется переменная ii со ссылкой на этот объект
    printAll(o, i, ii);             // 4 В Stack'е создается новый стек-фрейм printAll
    // и в нем записываются переменные Object o, int i и Integer ii
    // а так же адрес возврата в метод main. Начинается построчное выполнение метода printAll
    System.out.println("finished"); // 7 В Stack'е создается фрейм println,
    // которому передается ссылка на созданный в Куче объект String со значением "finished".
    // В ходе работы программы отрабатывает Garbage Collector.
  }

  private static void printAll(Object o, int i, Integer ii) {
    Integer uselessVar = 700;                   // 5 В Куче создается объект Integer со значением 700,
    // а в printAll появляется переменная uselessVar со ссылкой на этот объект.
    System.out.println(o.toString() + i + ii);  // 6 В Stack'е создается новый стек-фрейм println,
    // в него сохраняются адрес выхода в метод printAll и значения аргументов i и ii. В Stack'е создается фрейм toString.
  }
}
